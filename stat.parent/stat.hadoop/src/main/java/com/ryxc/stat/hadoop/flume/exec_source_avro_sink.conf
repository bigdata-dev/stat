# example.conf: A single-node Flume configuration

# Name the components on this agent
access.sources = r1 r2 r3
access.sinks = k1
access.channels = c1

# Describe/configure the source
access.sources.r1.type = exec
access.sources.r1.command = tail -n -0 -F /home/ryxc/work/stat/data/access.log
access.sources.r1.interceptors = i1
access.sources.r1.interceptors.i1.type = static
access.sources.r1.interceptors.i1.key = type
access.sources.r1.interceptors.i1.value = access

access.sources.r2.type = exec
access.sources.r2.command = tail -n -0 -F  /home/ryxc/work/stat/data/ugchead.log
access.sources.r2.interceptors = i2
access.sources.r2.interceptors.i2.type = static
access.sources.r2.interceptors.i2.key = type
access.sources.r2.interceptors.i2.value = ugchead

access.sources.r3.type = exec
access.sources.r3.command = tail -n -0 -F  /home/ryxc/work/stat/data/ugctail.log
access.sources.r3.interceptors = i3
access.sources.r3.interceptors.i3.type = static
access.sources.r3.interceptors.i3.key = type
access.sources.r3.interceptors.i3.value = ugctail

# Describe the sink
access.sinks.k1.type = avro
access.sinks.k1.hostname = 192.168.116.166
access.sinks.k1.port = 41415

# Use a channel which buffers events in memory
access.channels.c1.type = memory
access.channels.c1.capacity = 10000
access.channels.c1.transactionCapacity = 1000

# Bind the source and sink to the channel
access.sources.r1.channels = c1
access.sources.r2.channels = c1
access.sources.r3.channels = c1
access.sinks.k1.channel = c1

